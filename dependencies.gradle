dependencies {
    ext {
        versionConstraints = {
            api platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.5.2")
        }

        def isTestProject = project.name.endsWith("-test")
        testDependency = { args ->
            if (isTestProject) {
                api args
            } else {
                testImplementation args
            }
        }
        jvmCommonTestDependency = { args ->
            if (isTestProject) {
                jvmCommonMainApi args
            } else {
                jvmCommonTestImplementation args
            }
        }

        if (project.plugins.hasPlugin("org.jetbrains.kotlin.multiplatform")) {
            api = { args -> commonMainApi args }
            testImplementation = { args -> commonTestImplementation args }
        }

        base = {
            versionConstraints()

            api "org.jetbrains.kotlinx:kotlinx-coroutines-core"

            testDependency "org.jetbrains.kotlin:kotlin-test"

            jvmCommonTestDependency "org.jetbrains.kotlin:kotlin-test-junit"
            jvmCommonTestDependency "junit:junit:4.13.2"
            jvmCommonTestDependency "org.jetbrains.kotlinx:kotlinx-coroutines-test"

            jvmCommonTestImplementation "io.mockk:mockk:1.12.0"
        }

        activityVersion = "1.3.1"
        fragmentVersion = "1.3.1"
        lifecycleVersion = "2.3.1"
        androidBase = {
            androidMainApi "androidx.annotation:annotation:1.2.0"
            androidMainApi "androidx.appcompat:appcompat:1.3.1"
            androidMainApi "androidx.core:core-ktx:1.6.0"
            androidMainApi "androidx.activity:activity-ktx:$activityVersion"
            androidMainApi "androidx.fragment:fragment-ktx:$fragmentVersion"

            androidMainApi "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
            androidMainApi "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
            androidMainApi "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
            androidMainApi "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
            constraints {
                api "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
                api "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
                api "androidx.lifecycle:lifecycle-process:$lifecycleVersion"
            }

            androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
            androidTestImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
            androidTestImplementation "androidx.test:core:1.3.0"
            androidTestImplementation "androidx.test:core-ktx:1.3.0"
            androidTestImplementation "androidx.test.ext:junit:1.1.2"
            androidTestImplementation "androidx.test.ext:junit-ktx:1.1.2"
            androidTestImplementation "org.robolectric:robolectric:4.6.1"
        }

        composeVersion = "1.1.0-alpha05"
        jetpackCompose = {
            android {
                buildFeatures {
                    compose true
                }

                composeOptions {
                    kotlinCompilerExtensionVersion = composeVersion
                }
            }

            androidMainApi "androidx.activity:activity-compose:$activityVersion"
            androidMainApi "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"

            androidMainApi "androidx.compose.runtime:runtime:$composeVersion"
            constraints {
                api "androidx.compose.foundation:foundation:$composeVersion"
                api "androidx.compose.ui:ui:$composeVersion"
                api "androidx.compose.animation:animation:$composeVersion"
                api "androidx.compose.material:material:$composeVersion"
                api "androidx.compose.ui:ui-tooling:$composeVersion"
            }
        }
    }
}
