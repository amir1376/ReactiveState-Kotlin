buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.10.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
    }

    apply from: "$rootDir/gradle/common/coverage.gradle"
    installCoverageDeps()
}

def isOnCI = System.getenv('RUNNING_ON_CI') == 'true'

// Base package setup
group 'com.ensody.reactivestate'
subprojects {
    group rootProject.group
    version = rootProject.version

    def isAndroidProject = project.file('src/main/AndroidManifest.xml').exists()

    repositories {
        google()
        jcenter()
    }

    apply from: "$rootDir/dependencies.gradle"

    if (!isAndroidProject) {
        apply from: "$rootDir/gradle/common/kotlin-library.gradle"
        kotlinLibrary()

        dependencies {
            base()
        }
    } else {
        apply from: "$rootDir/gradle/common/android-library.gradle"
        androidLibrary(19)

        dependencies {
            baseAndroid()
        }
    }

    apply from: "$rootDir/gradle/common/dokka.gradle"

    apply from: "$rootDir/gradle/common/coverage.gradle"
    trackCoverage(isOnCI)
}

// Publishing packages
apply from: "$rootDir/secrets.gradle"
def bintrayUsername = secrets.getProperty("bintray.username") ?: System.getenv("BINTRAY_USERNAME")
def bintrayApiKey = secrets.getProperty("bintray.apikey") ?: System.getenv("BINTRAY_APIKEY")
def licenses = ['MIT']
def repoUrl = 'https://github.com/ensody/ReactiveState-Kotlin'
def vcsUrl = "${repoUrl}.git"
def website = repoUrl
subprojects {
    apply from: "$rootDir/gradle/publish-bintray.gradle"
    publishBintray('ensody', 'maven', group, project.name, bintrayUsername, bintrayApiKey, licenses, vcsUrl, website)
}
