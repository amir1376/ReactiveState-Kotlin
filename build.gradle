buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.1"
    }

    apply from: "$rootDir/gradle/common/coverage.gradle"
    installCoverageDeps()
}

def isOnCI = System.getenv('RUNNING_ON_CI') == 'true'

apply from: "$rootDir/secrets.gradle"
def bintrayUsername = secrets.getProperty("bintray.username") ?: System.getenv("BINTRAY_USERNAME")
def bintrayApiKey = secrets.getProperty("bintray.apikey") ?: System.getenv("BINTRAY_APIKEY")

// Base package setup
group 'com.ensody.reactivestate'
subprojects {
    group rootProject.group
    version = rootProject.version

    def isAndroidProject = project.file('src/main/AndroidManifest.xml').exists()
    def isPlatformProject = project.name == 'dependency-versions-bom'
    def isTestProject = project.name.endsWith('-test')

    repositories {
        google()
        jcenter()
    }

    apply from: "$rootDir/dependencies.gradle"

    if (isPlatformProject) {
        apply from: "$rootDir/gradle/common/dependency-versions-bom.gradle"
    } else {
        if (!isAndroidProject) {
            apply from: "$rootDir/gradle/common/kotlin-library.gradle"
            kotlinLibrary()

            dependencies {
                base()
                if (isTestProject) {
                    baseTestLib()
                }
            }
        } else {
            apply from: "$rootDir/gradle/common/android-library.gradle"
            androidLibrary(19)

            android {
                // Resolve build conflicts for test modules
                if (isTestProject) {
                    packagingOptions {
                        pickFirst 'META-INF/AL2.0'
                        pickFirst 'META-INF/LGPL2.1'
                    }
                }
            }

            dependencies {
                baseAndroid()
                if (isTestProject) {
                    androidTestLib()
                }
            }
        }

        apply from: "$rootDir/gradle/common/dokka.gradle"

        apply from: "$rootDir/gradle/common/coverage.gradle"
        trackCoverage(isOnCI)
    }

    apply from: "$rootDir/gradle/common/publish.gradle"
    publish(
        url: "https://api.bintray.com/maven/ensody/maven/${group}:${project.name}/;publish=1",
        username: bintrayUsername,
        password: bintrayApiKey,
        name: "ReactiveState: ${project.name}",
        description: "An easy to understand reactive state management solution for Kotlin and Android.",
        licenses: [licenses.MIT],
        website: "https://ensody.github.io/ReactiveState-Kotlin/",
        repoUrl: "https://github.com/ensody/ReactiveState-Kotlin",
    )
}
