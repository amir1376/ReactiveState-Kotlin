import org.gradle.api.publish.maven.internal.publication.DefaultMavenPom

// Based on:
// * https://gist.github.com/Robyer/a6578e60127418b380ca133a1291f017
// * https://stackoverflow.com/questions/26874498/publish-an-android-library-to-maven-with-aar-and-source-jar

class License {
    String name
    String url
    String distribution
}

class PublishingConfig {
    String url
    String username
    String password
    String name
    String repoUrl
    Closure<Object> pomAction
    Boolean withSources = true
    Boolean withPublication = true
    Boolean isPlatformProject = false
}

ext.LICENSE = [
    MIT: {
        name = "The MIT License"
        url = "https://opensource.org/licenses/mit-license.php"
    },
    APACHE2: {
        name = "The Apache Software License, Version 2.0"
        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
    },
]

ext.publish = { args ->
    PublishingConfig config = new PublishingConfig(args)

    apply plugin: "maven-publish"
    apply plugin: "signing"

    if (!config.name) {
        config.name = "$rootProject.name: $project.name"
    }

    def isAndroidProject = project.file('src/main/AndroidManifest.xml').exists()

    if (config.withPublication) {
        if (!config.isPlatformProject && config.withSources) {
            task sourcesJar(type: Jar) {
                archiveClassifier.set('sources')
                if (isAndroidProject) {
                    from android.sourceSets.main.java.srcDirs
                    from android.sourceSets.main.kotlin.srcDirs
                } else {
                    from sourceSets.main.java.srcDirs
                    from sourceSets.main.kotlin.srcDirs
                }
            }
            task javadocJar(type: Jar) {
                archiveClassifier.set('javadoc')
                from rootProject.file("README.md")
            }
        }

        // Some components are only available in the afterEvaluate phase (e.g. components.release)
        afterEvaluate {
            publishing {
                publications {
                    release(MavenPublication) {
                        if (isAndroidProject) {
                            from components.release
                        } else if (config.isPlatformProject) {
                            from components.javaPlatform
                        } else {
                            from components.java
                        }
                        if (!config.isPlatformProject && config.withSources) {
                            artifact sourcesJar
                            artifact javadocJar
                        }
                        pom {
                            name = config.name
                            if (config.repoUrl) {
                                scm {
                                    url = config.repoUrl
                                    def regex = ~"^https://(github.com/[^/]+/[^/]+).*"
                                    def (_, path) = (config.repoUrl =~ regex)[0]
                                    if (path) {
                                        connection = "scm:git:git://${path}.git"
                                        developerConnection = "scm:git:ssh://${path}.git"
                                    }
                                }
                            }
                        }
                        if (config.pomAction) {
                            pom(config.pomAction)
                        }
                    }
                }
            }
            signing {
                sign publishing.publications
            }
        }
    }

    publishing {
        repositories {
            maven {
                url config.url
                credentials {
                    username config.username
                    password config.password
                }
            }
        }
    }
}
